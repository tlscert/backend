// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: tlscert/service/v1/api.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCertificateRequest is the request for the GetCertificate RPC.
type GetCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCertificateRequest) Reset() {
	*x = GetCertificateRequest{}
	mi := &file_tlscert_service_v1_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateRequest) ProtoMessage() {}

func (x *GetCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tlscert_service_v1_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateRequest.ProtoReflect.Descriptor instead.
func (*GetCertificateRequest) Descriptor() ([]byte, []int) {
	return file_tlscert_service_v1_api_proto_rawDescGZIP(), []int{0}
}

// GetCertificateResponse is the response for the GetCertificate RPC.
type GetCertificateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host is the hostname for which the certificate is issued.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Certificate is the PEM encoded certificate.
	// The first certificate is the leaf certificate. The rest are the chain of trust.
	Certificate [][]byte `protobuf:"bytes,2,rep,name=certificate,proto3" json:"certificate,omitempty"`
	// Key is the PKCS#8 encoded private key.
	Key           []byte `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCertificateResponse) Reset() {
	*x = GetCertificateResponse{}
	mi := &file_tlscert_service_v1_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateResponse) ProtoMessage() {}

func (x *GetCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tlscert_service_v1_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateResponse.ProtoReflect.Descriptor instead.
func (*GetCertificateResponse) Descriptor() ([]byte, []int) {
	return file_tlscert_service_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetCertificateResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetCertificateResponse) GetCertificate() [][]byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *GetCertificateResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

var File_tlscert_service_v1_api_proto protoreflect.FileDescriptor

var file_tlscert_service_v1_api_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x32, 0x7d, 0x0a,
	0x12, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xc2, 0x01, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x53, 0x58, 0xaa,
	0x02, 0x12, 0x54, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x54, 0x6c, 0x73, 0x63, 0x65, 0x72, 0x74, 0x5c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x54, 0x6c, 0x73, 0x63,
	0x65, 0x72, 0x74, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x54, 0x6c, 0x73,
	0x63, 0x65, 0x72, 0x74, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_tlscert_service_v1_api_proto_rawDescOnce sync.Once
	file_tlscert_service_v1_api_proto_rawDescData []byte
)

func file_tlscert_service_v1_api_proto_rawDescGZIP() []byte {
	file_tlscert_service_v1_api_proto_rawDescOnce.Do(func() {
		file_tlscert_service_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tlscert_service_v1_api_proto_rawDesc), len(file_tlscert_service_v1_api_proto_rawDesc)))
	})
	return file_tlscert_service_v1_api_proto_rawDescData
}

var file_tlscert_service_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tlscert_service_v1_api_proto_goTypes = []any{
	(*GetCertificateRequest)(nil),  // 0: tlscert.service.v1.GetCertificateRequest
	(*GetCertificateResponse)(nil), // 1: tlscert.service.v1.GetCertificateResponse
}
var file_tlscert_service_v1_api_proto_depIdxs = []int32{
	0, // 0: tlscert.service.v1.CertificateService.GetCertificate:input_type -> tlscert.service.v1.GetCertificateRequest
	1, // 1: tlscert.service.v1.CertificateService.GetCertificate:output_type -> tlscert.service.v1.GetCertificateResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tlscert_service_v1_api_proto_init() }
func file_tlscert_service_v1_api_proto_init() {
	if File_tlscert_service_v1_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tlscert_service_v1_api_proto_rawDesc), len(file_tlscert_service_v1_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tlscert_service_v1_api_proto_goTypes,
		DependencyIndexes: file_tlscert_service_v1_api_proto_depIdxs,
		MessageInfos:      file_tlscert_service_v1_api_proto_msgTypes,
	}.Build()
	File_tlscert_service_v1_api_proto = out.File
	file_tlscert_service_v1_api_proto_goTypes = nil
	file_tlscert_service_v1_api_proto_depIdxs = nil
}
